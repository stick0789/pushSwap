a		b
13		
5
6
1
11
7
3

comienzo
pb -> pasar a B 
		MOVIMEINTOS pb
a		b
5		13
6
1
11
7
3

pb -> pasar a B y verificar si el numero es mayor o menor que el antiguo

	si (5) > (13 -> el primero del stack B)
		5 ira al comienzo no se cumple)
	si no y solo hay 1 elemento en stack B
		5 ira al final
		por lo que despues de pb usar sb
		
		MOVIMIENTOS pb - sb
	
a		b
6		13
1		5
11		
7
3

pb -> pasar a B y verificar si el numero es mayor o menor que el antiguo

	si (4) > (5 ->primero del stack B)
		4 ira al comienzo
	si no 
		4 ira al final, pero como con pb se acomoda de primero
		se hace otra comprobacion, no puede ir al final ya que 4 > 3
		
		si (4) > (3 -> posicion final) ejecutamos un sb para cambiar 
		de orden entre 4 y 5
		
		MOVIMIENTOS pb - sb
		
a		b
6		5
1		4
7		3

pb -> pasar a B el 6 y hacer la verificacion
	
	si (6) > (5 -> el primero del stack B)
		6 ira al comienzo 
	
		MOVIMIENTOS pb
		
a		b
1		6
7		5
		4
		3
		
pb -> pasar a B el 1 y verificar
	
	si (1) > (6) (el primero del stack B)
		esto no se cumple
	si no verificar que (1) > (3 -> el ultimo del STACK B)
		esto si cumple
		ejecutar un rb porque al usar pb pasa a primera posicion y
		debemos colocarlo en la ultima
		
	MOVIMIENTOS pb - rb
	
a		b
7		6  
		5
		4
		3
		1

pb -> pasar a B el 7 y verificar

	si (7) > (6 -> el primero del stack B)
		eso se cumple por lo que ira al comienzo
		
	MOVIMIENTOS pb
	
a		b
		7
		6
		5
		4
		3
		1
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
